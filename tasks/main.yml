- name: Set OS family mapping
  ansible.builtin.set_fact:
    aws_ssm_plugin_os_family_mapping:
      Debian:
        group: ubuntu
        type: deb
      RedHat:
        group: linux
        type: rpm

- name: Set CPU arch mapping
  ansible.builtin.set_fact:
    aws_ssm_plugin_cpu_arch_mapping:
      x86_64: 64bit
      aarch64: arm64

- name: Include OS-specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

- name: Set packages to install
  when: aws_ssm_plugin_packages is not defined
  ansible.builtin.set_fact:
    aws_ssm_plugin_packages: "{{ __aws_ssm_plugin_packages | list }}"

- name: Install dependencies
  ansible.builtin.package:
    name: "{{ aws_ssm_plugin_packages }}"
    state: present
  become: true

- name: Get installed version
  ansible.builtin.shell:
    cmd: |
      set -euo pipefail
      export PATH=/usr/local/bin:$PATH
      if command -v session-manager-plugin &> /dev/null; then
        session-manager-plugin --version
      fi
    executable: /bin/bash
  register: aws_ssm_plugin_get_installed_version
  changed_when: false

- name: Set installed version
  ansible.builtin.set_fact:
    aws_ssm_plugin_installed_version: >-
      {{ aws_ssm_plugin_get_installed_version.stdout | regex_search(".+\..+\..+") }}

- name: Print installed version
  ansible.builtin.debug:
    var: aws_ssm_plugin_installed_version

- name: Set empty archive URL parts
  ansible.builtin.set_fact:
    aws_ssm_plugin_archive_url_parts: []

- name: Set archive URL parts for target present
  when: aws_ssm_plugin_version == "present" and aws_ssm_plugin_installed_version == ""
  ansible.builtin.set_fact:
    aws_ssm_plugin_archive_url_parts:
      - "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/"
      - "{{ aws_ssm_plugin_os_family_mapping[ansible_os_family]['group'] }}"
      - "_"
      - "{{ aws_ssm_plugin_cpu_arch_mapping[ansible_architecture] }}"
      - "/session-manager-plugin."
      - "{{ aws_ssm_plugin_os_family_mapping[ansible_os_family]['type'] }}"

- name: Handle latest
  when: aws_ssm_plugin_version == "latest"
  block:
    - name: Get latest version
      ansible.builtin.shell:
        cmd: |
          set -euo pipefail
          curl --silent --fail-with-body {{ aws_ssm_plugin_github }} \
            | sed -n -E 's/.*"tag_name": "(.+)",.*/\1/p'
        executable: /bin/bash
      vars:
        aws_ssm_plugin_github: https://api.github.com/repos/aws/session-manager-plugin/releases/latest
      register: aws_ssm_plugin_get_latest_version
      changed_when: false

    - name: Set latest version
      ansible.builtin.set_fact:
        aws_ssm_plugin_latest_version: >-
          {{ aws_ssm_plugin_get_latest_version.stdout | regex_search(".+\..+\..+") }}

    - name: Print latest version
      ansible.builtin.debug:
        var: aws_ssm_plugin_latest_version

    - name: Set archive URL for target latest
      when: aws_ssm_plugin_installed_version != aws_ssm_plugin_latest_version
      ansible.builtin.set_fact:
        aws_ssm_plugin_archive_url_parts:
          - "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/"
          - "{{ aws_ssm_plugin_os_family_mapping[ansible_os_family]['group'] }}"
          - "_"
          - "{{ aws_ssm_plugin_cpu_arch_mapping[ansible_architecture] }}"
          - "/session-manager-plugin."
          - "{{ aws_ssm_plugin_os_family_mapping[ansible_os_family]['type'] }}"

- name: Set archive URL from parts
  ansible.builtin.set_fact:
    aws_ssm_plugin_archive_url: "{{ aws_ssm_plugin_archive_url_parts | join }}"

- name: Print archive URL
  ansible.builtin.debug:
    var: aws_ssm_plugin_archive_url

- name: Install
  when: aws_ssm_plugin_archive_url != ""
  become: true
  block:
    - name: Create tmp dir
      ansible.builtin.tempfile:
        state: directory
      register: aws_ssm_plugin_tmp_dir

    - name: Download archive
      ansible.builtin.get_url:
        url: "{{ aws_ssm_plugin_archive_url }}"
        dest: "{{ aws_ssm_plugin_tmp_dir.path }}/aws-ssm-plugin-archive"
        force: true
        mode: u=rw,g=,o=
      register: aws_ssm_plugin_download_archive

    - name: Install (Debian)
      when: ansible_os_family == "Debian"
      ansible.builtin.apt:
        deb: "{{ aws_ssm_plugin_download_archive.dest }}"

    - name: Install (RedHat)
      when: ansible_os_family == "RedHat"
      ansible.builtin.dnf:
        name: "{{ aws_ssm_plugin_download_archive.dest }}"
        state: present

    - name: Test executable
      ansible.builtin.command: session-manager-plugin --version
      changed_when: false
